name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v0.1.0, v1.2.3, etc.

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Release ${{ github.ref_name }}

            ### Downloads
            - **Windows**: `rclone-selective-sync-amd64-installer.exe`
            - **macOS**: `rclone-selective-sync.app.zip` (Universal binary for Intel & Apple Silicon)
            - **Linux**: AppImage, DEB, and RPM packages available

            ### Installation
            - **Windows**: Download and run the installer
            - **macOS**: Download, unzip, and drag to Applications folder
            - **Linux**: Download your preferred package format

            ---
            Generated with GitHub Actions

  build-windows:
    name: Build Windows
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - name: Install Task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Update version.txt
        run: echo "${{ needs.create-release.outputs.version }}" > version.txt

      - name: Build Windows Installer
        run: task windows:package

      - name: Upload Windows Installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./bin/rclone-selective-sync-amd64-installer.exe
          asset_name: rclone-selective-sync-amd64-installer.exe
          asset_content_type: application/octet-stream

  build-macos:
    name: Build macOS Universal
    needs: create-release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - name: Install Task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Update version.txt
        run: echo "${{ needs.create-release.outputs.version }}" > version.txt

      - name: Build macOS Universal App Bundle
        run: task darwin:package:universal

      - name: Create macOS ZIP
        run: |
          cd bin
          zip -r rclone-selective-sync.app.zip rclone-selective-sync.app

      - name: Upload macOS App Bundle
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./bin/rclone-selective-sync.app.zip
          asset_name: rclone-selective-sync.app.zip
          asset_content_type: application/zip

  build-linux:
    name: Build Linux
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev nsis

      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v3/cmd/wails3@latest

      - name: Install Task
        run: go install github.com/go-task/task/v3/cmd/task@latest

      - name: Install nfpm
        run: |
          echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | sudo tee /etc/apt/sources.list.d/goreleaser.list
          sudo apt update
          sudo apt install nfpm

      - name: Update version.txt
        run: echo "${{ needs.create-release.outputs.version }}" > version.txt

      - name: Build Linux Packages
        run: task linux:package

      - name: Upload AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./bin/rclone-selective-sync-x86_64.AppImage
          asset_name: rclone-selective-sync-x86_64.AppImage
          asset_content_type: application/octet-stream

      - name: Upload DEB Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./bin/rclone-selective-sync_${{ needs.create-release.outputs.version }}_amd64.deb
          asset_name: rclone-selective-sync_${{ needs.create-release.outputs.version }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload RPM Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./bin/rclone-selective-sync-${{ needs.create-release.outputs.version }}-1.x86_64.rpm
          asset_name: rclone-selective-sync-${{ needs.create-release.outputs.version }}-1.x86_64.rpm
          asset_content_type: application/x-rpm
